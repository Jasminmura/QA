{
	"info": {
		"_postman_id": "cc3f5ba4-6c12-4a75-9793-4c11607002fe",
		"name": "swagger",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "46130335"
	},
	"item": [
		{
			"name": "Get store inventory",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/store/inventory",
					"host": [
						"{{URL}}"
					],
					"path": [
						"store",
						"inventory"
					]
				}
			},
			"response": []
		},
		{
			"name": "post store order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Order ID is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(12345);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 12345,\r\n  \"petId\": 1,\r\n  \"quantity\": 1,\r\n  \"shipDate\": \"2025-08-05T12:00:00.000Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/store/order",
					"host": [
						"{{URL}}"
					],
					"path": [
						"store",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "get store order by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct order is returned\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(12345);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/store/order/{{orderId}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"store",
						"order",
						"{{orderId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get store order by invalid ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 for invalid order ID\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/store/order/99999999",
					"host": [
						"{{URL}}"
					],
					"path": [
						"store",
						"order",
						"99999999"
					]
				}
			},
			"response": []
		},
		{
			"name": "add new order for pet purchase",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"pm.environment.set(\"orderId\", jsonData.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 123456789,\r\n  \"petId\": 1,\r\n  \"quantity\": 1,\r\n  \"shipDate\": \"2025-08-05T12:00:00.000Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/store/order",
					"host": [
						"{{URL}}"
					],
					"path": [
						"store",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete store order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{URL}}/store/order/{{orderId}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"store",
						"order",
						"{{orderId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get order by invalid ID / edge order",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "post order - empty body",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "post order - missing required fields",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	]
}